name: Release
# run name show author and target env
run-name: Release to ${{ inputs.targetEnv }} by @${{ github.actor }}
on:
  workflow_call:
    inputs:
      targetEnv:
        type: string
        required: true
        description: "The environment to deploy to"
      targetSlackChannelId:
        type: string
        required: true
        description: "The Slack channel ID to post to"
    secrets:
      slackBotToken:
        description: "The Slack bot token"
        required: true

    outputs:
      ranMigrations:
        description: "Whether or not migrations were run"
        value: ${{ jobs.run_migrations.outputs.ranMigrations }}
      slackThreadTs:
        description: "The thread ID of the slack message"
        value: ${{ jobs.start_release.outputs.slackThreadTs }}

jobs:
  start_release:
    runs-on: ubuntu-latest
    outputs:
      slackThreadTs: ${{ steps.slack.outputs.ts }}
    steps:
      - name: Save job url
        id: save_job_url
        run: echo "job_url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> "$GITHUB_OUTPUT"
      - name: Post to a Slack channel
        id: slack
        uses: ArnaudRinquin/slack-github-action@thread_ts
        with:
          channel-id: "${{ inputs.targetSlackChannelId }}"
          payload: |
            {
              "text": "New release started! ðŸš€",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "New release started! ðŸš€",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Check the logs"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Logs",
                      "emoji": true
                    },
                    "url": "${{ steps.save_job_url.outputs.job_url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slackBotToken }}

  deploy_the_server:
    runs-on: ubuntu-latest
    needs: start_release
    steps:
      - name: Update slack that server is deploying
        uses: ArnaudRinquin/slack-github-action@thread_ts
        with:
          thread-ts: ${{ needs.start_release.outputs.slackThreadTs }}
          channel-id: "${{ inputs.targetSlackChannelId }}"
          payload: |
            {
              "text": "Deploying the server... ðŸ”„"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slackBotToken }}
      - name: Deploy the server
        run: echo "Deploying the server..."
      - name: Update with success if server deploy
        if: success()
        uses: ArnaudRinquin/slack-github-action@thread_ts
        with:
          thread-ts: ${{ needs.start_release.outputs.slackThreadTs }}
          channel-id: "${{ inputs.targetSlackChannelId }}"
          payload: |
            {
              "text": "Server deployed! âœ…"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slackBotToken }}
      - name: Update with failure if server deploy
        if: failure()
        uses: ArnaudRinquin/slack-github-action@thread_ts
        with:
          thread-ts: ${{ needs.start_release.outputs.slackThreadTs }}
          channel-id: "${{ inputs.targetSlackChannelId }}"
          payload: |
            {
              "text": "Server deployment failed! ðŸš©ðŸš©ðŸš©"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slackBotToken }}

  run_migrations:
    needs: start_release
    uses: ./.github/workflows/run-migrations.yml
    secrets:
      slackBotToken: ${{ secrets.slackBotToken }}
    with:
      targetEnv: ${{ inputs.targetEnv }}
      targetSlackChannelId: ${{ inputs.targetSlackChannelId }}
      targetSlackThreadTs: ${{ needs.start_release.outputs.slackThreadTs }}

  complete_release:
    runs-on: ubuntu-latest
    needs: [start_release, deploy_the_server, run_migrations]
    steps:
      - name: Successfull completion to slack
        if: needs.deploy_the_server.result == 'success' && needs.run_migrations.result == 'success'
        uses: ArnaudRinquin/slack-github-action@thread_ts
        with:
          thread-ts: ${{ needs.start_release.outputs.slackThreadTs }}
          channel-id: "${{ inputs.targetSlackChannelId }}"
          payload: |
            {
              "text": "Release complete! ðŸŽ‰"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slackBotToken }}
      - name: Failed completion to slack
        if: needs.deploy_the_server.result == 'failure' || needs.run_migrations.result == 'failure'
        uses: ArnaudRinquin/slack-github-action@thread_ts
        with:
          thread-ts: ${{ needs.start_release.outputs.slackThreadTs }}
          channel-id: "${{ inputs.targetSlackChannelId }}"
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Release failed!"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slackBotToken }}
